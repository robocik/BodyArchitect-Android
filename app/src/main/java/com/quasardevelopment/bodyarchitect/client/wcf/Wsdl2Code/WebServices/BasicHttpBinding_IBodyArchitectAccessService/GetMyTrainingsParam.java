package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.MyTrainingSortOrder;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class GetMyTrainingsParam implements KvmSerializable {
    
    public String customerId;
    public String endDate;
    public boolean endDateSpecified;
    public String myTrainingId;
    public boolean sortAscending;
    public boolean sortAscendingSpecified;
    public MyTrainingSortOrder sortOrder;
    public boolean sortOrderSpecified;
    public String startDate;
    public boolean startDateSpecified;
    public VectorTrainingEnd trainingEnds;
    public String userId;
    
    public GetMyTrainingsParam(){}
    
    public GetMyTrainingsParam(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("CustomerId"))
        {
            Object obj = soapObject.getProperty("CustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("CustomerId");
                customerId = j.toString();
            }else if (obj!= null && obj instanceof String){
                customerId = (String) soapObject.getProperty("CustomerId");
            }
        }
        if (soapObject.hasProperty("EndDate"))
        {
            Object obj = soapObject.getProperty("EndDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("EndDate");
                endDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                endDate = (String) soapObject.getProperty("EndDate");
            }
        }
        if (soapObject.hasProperty("EndDateSpecified"))
        {
            Object obj = soapObject.getProperty("EndDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("EndDateSpecified");
                endDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                endDateSpecified = (Boolean) soapObject.getProperty("EndDateSpecified");
            }
        }
        if (soapObject.hasProperty("MyTrainingId"))
        {
            Object obj = soapObject.getProperty("MyTrainingId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("MyTrainingId");
                myTrainingId = j.toString();
            }else if (obj!= null && obj instanceof String){
                myTrainingId = (String) soapObject.getProperty("MyTrainingId");
            }
        }
        if (soapObject.hasProperty("SortAscending"))
        {
            Object obj = soapObject.getProperty("SortAscending");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SortAscending");
                sortAscending = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                sortAscending = (Boolean) soapObject.getProperty("SortAscending");
            }
        }
        if (soapObject.hasProperty("SortAscendingSpecified"))
        {
            Object obj = soapObject.getProperty("SortAscendingSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SortAscendingSpecified");
                sortAscendingSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                sortAscendingSpecified = (Boolean) soapObject.getProperty("SortAscendingSpecified");
            }
        }
        if (soapObject.hasProperty("SortOrder"))
        {
            Object obj = soapObject.getProperty("SortOrder");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SortOrder");
                sortOrder = MyTrainingSortOrder.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("SortOrderSpecified"))
        {
            Object obj = soapObject.getProperty("SortOrderSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SortOrderSpecified");
                sortOrderSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                sortOrderSpecified = (Boolean) soapObject.getProperty("SortOrderSpecified");
            }
        }
        if (soapObject.hasProperty("StartDate"))
        {
            Object obj = soapObject.getProperty("StartDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("StartDate");
                startDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                startDate = (String) soapObject.getProperty("StartDate");
            }
        }
        if (soapObject.hasProperty("StartDateSpecified"))
        {
            Object obj = soapObject.getProperty("StartDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("StartDateSpecified");
                startDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                startDateSpecified = (Boolean) soapObject.getProperty("StartDateSpecified");
            }
        }
        if (soapObject.hasProperty("TrainingEnds"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("TrainingEnds");
            trainingEnds = new VectorTrainingEnd(j);
        }
        if (soapObject.hasProperty("UserId"))
        {
            Object obj = soapObject.getProperty("UserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("UserId");
                userId = j.toString();
            }else if (obj!= null && obj instanceof String){
                userId = (String) soapObject.getProperty("UserId");
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return customerId;
            case 1:
                return endDate;
            case 2:
                return endDateSpecified;
            case 3:
                return myTrainingId;
            case 4:
                return sortAscending;
            case 5:
                return sortAscendingSpecified;
            case 6:
                return sortOrder.toString();
            case 7:
                return sortOrderSpecified;
            case 8:
                return startDate;
            case 9:
                return startDateSpecified;
            case 10:
                return trainingEnds;
            case 11:
                return userId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 12;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustomerId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EndDate";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "EndDateSpecified";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MyTrainingId";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SortAscending";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SortAscendingSpecified";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SortOrder";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SortOrderSpecified";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "StartDate";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "StartDateSpecified";
                break;
            case 10:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "TrainingEnds";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UserId";
                break;
        }
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
