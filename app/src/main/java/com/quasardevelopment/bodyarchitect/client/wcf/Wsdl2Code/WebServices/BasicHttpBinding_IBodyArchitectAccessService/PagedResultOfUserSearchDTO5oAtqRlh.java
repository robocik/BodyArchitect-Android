package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.util.DateTimeHelper;
import com.quasardevelopment.bodyarchitect.client.wcf.ReferencesManager;
import com.quasardevelopment.bodyarchitect.client.wcf.WcfConstans;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.text.ParseException;
import java.util.Date;
import java.util.Hashtable;

public class PagedResultOfUserSearchDTO5oAtqRlh implements KvmSerializable {
    
    public int allItemsCount;
    public VectorUserSearchDTO items;
    public int pageIndex;
    public Date retrievedDateTime;
    
    public PagedResultOfUserSearchDTO5oAtqRlh(){}
    
    public PagedResultOfUserSearchDTO5oAtqRlh(SoapObject soapObject,ReferencesManager referencesTable)    throws ParseException
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("AllItemsCount"))
        {
            Object obj = soapObject.getProperty("AllItemsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("AllItemsCount");
                allItemsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                allItemsCount = (Integer) soapObject.getProperty("AllItemsCount");
            }
        }
        if (soapObject.hasProperty("Items"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Items");
            items = new VectorUserSearchDTO(j,referencesTable);
        }
        if (soapObject.hasProperty("PageIndex"))
        {
            Object obj = soapObject.getProperty("PageIndex");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("PageIndex");
                pageIndex = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                pageIndex = (Integer) soapObject.getProperty("PageIndex");
            }
        }
        if (soapObject.hasProperty("RetrievedDateTime"))
        {
            Object obj = soapObject.getProperty("RetrievedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("RetrievedDateTime");
                retrievedDateTime = DateTimeHelper.ConvertFromWebService(j.toString());
            }else if (obj!= null && obj instanceof String){
                retrievedDateTime = DateTimeHelper.ConvertFromWebService((String) soapObject.getProperty("RetrievedDateTime"));
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return allItemsCount;
            case 1:
                return items;
            case 2:
                return pageIndex;
            case 3:
                return retrievedDateTime;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 4;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AllItemsCount";
                break;
            case 1:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "Items";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PageIndex";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RetrievedDateTime";
                break;
        }
        info.namespace= WcfConstans.ServiceNamespace;
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
