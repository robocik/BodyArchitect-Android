package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.util.DateTimeHelper;
import com.quasardevelopment.bodyarchitect.client.wcf.ReferencesManager;
import com.quasardevelopment.bodyarchitect.client.wcf.WcfConstans;
import org.joda.time.DateTime;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;
import java.util.UUID;

public class ProfileStatisticsDTO extends BAGlobalObject implements KvmSerializable,Serializable,WcfInterfaces.IReferenceObject {
    
    public int a6WEntriesCount;
    public int a6WFullCyclesCount;
    public int blogEntriesCount;
    public int followersCount;
    public int friendsCount;
    public DateTime lastEntryDate;
    public DateTime lastLoginDate;
    public int loginsCount;
    public int myTrainingDayCommentsCount;
    public int sizeEntriesCount;
    public ProfileStatusDTO status;
    public int strengthTrainingEntriesCount;
    public int supplementEntriesCount;
    public int supplementsDefinitionsCount;
    public int trainingDayCommentsCount;
    public int trainingDaysCount;
    public int votingsCount;
    public int workoutPlansCount;
    
    public ProfileStatisticsDTO(){}
    
    public ProfileStatisticsDTO(SoapObject soapObject,ReferencesManager referencesTable)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasAttribute("Id"))
        {
            Object obj = soapObject.getAttribute("Id");
            referencesTable.Add((String) obj, this);
        }
        if (soapObject.hasProperty("A6WEntriesCount"))
        {
            Object obj = soapObject.getProperty("A6WEntriesCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("A6WEntriesCount");
                a6WEntriesCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                a6WEntriesCount = (Integer) soapObject.getProperty("A6WEntriesCount");
            }
        }
        if (soapObject.hasProperty("A6WFullCyclesCount"))
        {
            Object obj = soapObject.getProperty("A6WFullCyclesCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("A6WFullCyclesCount");
                a6WFullCyclesCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                a6WFullCyclesCount = (Integer) soapObject.getProperty("A6WFullCyclesCount");
            }
        }
        if (soapObject.hasProperty("BlogEntriesCount"))
        {
            Object obj = soapObject.getProperty("BlogEntriesCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("BlogEntriesCount");
                blogEntriesCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                blogEntriesCount = (Integer) soapObject.getProperty("BlogEntriesCount");
            }
        }
        if (soapObject.hasProperty("FollowersCount"))
        {
            Object obj = soapObject.getProperty("FollowersCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("FollowersCount");
                followersCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                followersCount = (Integer) soapObject.getProperty("FollowersCount");
            }
        }
        if (soapObject.hasProperty("FriendsCount"))
        {
            Object obj = soapObject.getProperty("FriendsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("FriendsCount");
                friendsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                friendsCount = (Integer) soapObject.getProperty("FriendsCount");
            }
        }
        if (soapObject.hasProperty("LastEntryDate"))
        {
            Object obj = soapObject.getProperty("LastEntryDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LastEntryDate");
                lastEntryDate = DateTimeHelper.ConvertFromWebServiceNew(j.toString());
            }else if (obj!= null && obj instanceof String){
                lastEntryDate = DateTimeHelper.ConvertFromWebServiceNew((String) soapObject.getProperty("LastEntryDate"));
            }
        }
        if (soapObject.hasProperty("LastLoginDate"))
        {
            Object obj = soapObject.getProperty("LastLoginDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LastLoginDate");
                lastLoginDate = DateTimeHelper.ConvertFromWebServiceNew(j.toString());
            }else if (obj!= null && obj instanceof String){
                lastLoginDate = DateTimeHelper.ConvertFromWebServiceNew((String) soapObject.getProperty("LastLoginDate"));
            }
        }
        if (soapObject.hasProperty("LoginsCount"))
        {
            Object obj = soapObject.getProperty("LoginsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LoginsCount");
                loginsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                loginsCount = (Integer) soapObject.getProperty("LoginsCount");
            }
        }
        if (soapObject.hasProperty("MyTrainingDayCommentsCount"))
        {
            Object obj = soapObject.getProperty("MyTrainingDayCommentsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("MyTrainingDayCommentsCount");
                myTrainingDayCommentsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                myTrainingDayCommentsCount = (Integer) soapObject.getProperty("MyTrainingDayCommentsCount");
            }
        }
        if (soapObject.hasProperty("SizeEntriesCount"))
        {
            Object obj = soapObject.getProperty("SizeEntriesCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SizeEntriesCount");
                sizeEntriesCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                sizeEntriesCount = (Integer) soapObject.getProperty("SizeEntriesCount");
            }
        }
        if (soapObject.hasProperty("Status"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Status");
            status =  new ProfileStatusDTO (j);
            
        }
        if (soapObject.hasProperty("StrengthTrainingEntriesCount"))
        {
            Object obj = soapObject.getProperty("StrengthTrainingEntriesCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("StrengthTrainingEntriesCount");
                strengthTrainingEntriesCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                strengthTrainingEntriesCount = (Integer) soapObject.getProperty("StrengthTrainingEntriesCount");
            }
        }
        if (soapObject.hasProperty("SupplementEntriesCount"))
        {
            Object obj = soapObject.getProperty("SupplementEntriesCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SupplementEntriesCount");
                supplementEntriesCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                supplementEntriesCount = (Integer) soapObject.getProperty("SupplementEntriesCount");
            }
        }
        if (soapObject.hasProperty("SupplementsDefinitionsCount"))
        {
            Object obj = soapObject.getProperty("SupplementsDefinitionsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SupplementsDefinitionsCount");
                supplementsDefinitionsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                supplementsDefinitionsCount = (Integer) soapObject.getProperty("SupplementsDefinitionsCount");
            }
        }
        if (soapObject.hasProperty("TrainingDayCommentsCount"))
        {
            Object obj = soapObject.getProperty("TrainingDayCommentsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("TrainingDayCommentsCount");
                trainingDayCommentsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                trainingDayCommentsCount = (Integer) soapObject.getProperty("TrainingDayCommentsCount");
            }
        }
        if (soapObject.hasProperty("TrainingDaysCount"))
        {
            Object obj = soapObject.getProperty("TrainingDaysCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("TrainingDaysCount");
                trainingDaysCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                trainingDaysCount = (Integer) soapObject.getProperty("TrainingDaysCount");
            }
        }
        if (soapObject.hasProperty("VotingsCount"))
        {
            Object obj = soapObject.getProperty("VotingsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("VotingsCount");
                votingsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                votingsCount = (Integer) soapObject.getProperty("VotingsCount");
            }
        }
        if (soapObject.hasProperty("WorkoutPlansCount"))
        {
            Object obj = soapObject.getProperty("WorkoutPlansCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("WorkoutPlansCount");
                workoutPlansCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                workoutPlansCount = (Integer) soapObject.getProperty("WorkoutPlansCount");
            }
        }
        if (soapObject.hasProperty("GlobalId"))
        {
            Object obj = soapObject.getProperty("GlobalId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("GlobalId");
                globalId = UUID.fromString(j.toString());
            }else if (obj!= null && obj instanceof String){
                globalId = UUID.fromString((String) soapObject.getProperty("GlobalId"));
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return globalId;
            case 1:
                return a6WEntriesCount;
            case 2:
                return a6WFullCyclesCount;
            case 3:
                return blogEntriesCount;
            case 4:
                return followersCount;
            case 5:
                return friendsCount;
            case 6:
                return lastEntryDate;
            case 7:
                return lastLoginDate;
            case 8:
                return loginsCount;
            case 9:
                return myTrainingDayCommentsCount;
            case 10:
                return sizeEntriesCount;
            case 11:
                return status;
            case 12:
                return strengthTrainingEntriesCount;
            case 13:
                return supplementEntriesCount;
            case 14:
                return supplementsDefinitionsCount;
            case 15:
                return trainingDayCommentsCount;
            case 16:
                return trainingDaysCount;
            case 17:
                return votingsCount;
            case 18:
                return workoutPlansCount;

        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 19;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GlobalId";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "A6WEntriesCount";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "A6WFullCyclesCount";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "BlogEntriesCount";
                break;
            case 4 :
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "FollowersCount";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "FriendsCount";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastEntryDate";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastLoginDate";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LoginsCount";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MyTrainingDayCommentsCount";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SizeEntriesCount";
                break;
            case 11:
                info.type = ProfileStatusDTO.class;
                info.name = "Status";
                break;
            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StrengthTrainingEntriesCount";
                break;
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SupplementEntriesCount";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SupplementsDefinitionsCount";
                break;
            case 15:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "TrainingDayCommentsCount";
                break;
            case 16:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "TrainingDaysCount";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "VotingsCount";
                break;
            case 18:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "WorkoutPlansCount";
                break;

        }
        info.namespace= WcfConstans.ServiceNamespace;
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
