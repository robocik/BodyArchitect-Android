package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.GPSCoordinatesOperationType;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class GPSOperationData implements KvmSerializable {
    
    public String gPSTrackerEntryId;
    public GPSCoordinatesOperationType operation;
    public boolean operationSpecified;
    public String encodedMustUnderstand;
    public String encodedMustUnderstand12;
    public boolean mustUnderstand;
    public String actor;
    public String role;
    public boolean didUnderstand;
    public String encodedRelay;
    public boolean relay;
    
    public GPSOperationData(){}
    
    public GPSOperationData(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("GPSTrackerEntryId"))
        {
            Object obj = soapObject.getProperty("GPSTrackerEntryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("GPSTrackerEntryId");
                gPSTrackerEntryId = j.toString();
            }else if (obj!= null && obj instanceof String){
                gPSTrackerEntryId = (String) soapObject.getProperty("GPSTrackerEntryId");
            }
        }
        if (soapObject.hasProperty("Operation"))
        {
            Object obj = soapObject.getProperty("Operation");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Operation");
                operation = GPSCoordinatesOperationType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("OperationSpecified"))
        {
            Object obj = soapObject.getProperty("OperationSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("OperationSpecified");
                operationSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                operationSpecified = (Boolean) soapObject.getProperty("OperationSpecified");
            }
        }
        if (soapObject.hasProperty("EncodedMustUnderstand"))
        {
            Object obj = soapObject.getProperty("EncodedMustUnderstand");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("EncodedMustUnderstand");
                encodedMustUnderstand = j.toString();
            }else if (obj!= null && obj instanceof String){
                encodedMustUnderstand = (String) soapObject.getProperty("EncodedMustUnderstand");
            }
        }
        if (soapObject.hasProperty("EncodedMustUnderstand12"))
        {
            Object obj = soapObject.getProperty("EncodedMustUnderstand12");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("EncodedMustUnderstand12");
                encodedMustUnderstand12 = j.toString();
            }else if (obj!= null && obj instanceof String){
                encodedMustUnderstand12 = (String) soapObject.getProperty("EncodedMustUnderstand12");
            }
        }
        if (soapObject.hasProperty("MustUnderstand"))
        {
            Object obj = soapObject.getProperty("MustUnderstand");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("MustUnderstand");
                mustUnderstand = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                mustUnderstand = (Boolean) soapObject.getProperty("MustUnderstand");
            }
        }
        if (soapObject.hasProperty("Actor"))
        {
            Object obj = soapObject.getProperty("Actor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Actor");
                actor = j.toString();
            }else if (obj!= null && obj instanceof String){
                actor = (String) soapObject.getProperty("Actor");
            }
        }
        if (soapObject.hasProperty("Role"))
        {
            Object obj = soapObject.getProperty("Role");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Role");
                role = j.toString();
            }else if (obj!= null && obj instanceof String){
                role = (String) soapObject.getProperty("Role");
            }
        }
        if (soapObject.hasProperty("DidUnderstand"))
        {
            Object obj = soapObject.getProperty("DidUnderstand");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("DidUnderstand");
                didUnderstand = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                didUnderstand = (Boolean) soapObject.getProperty("DidUnderstand");
            }
        }
        if (soapObject.hasProperty("EncodedRelay"))
        {
            Object obj = soapObject.getProperty("EncodedRelay");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("EncodedRelay");
                encodedRelay = j.toString();
            }else if (obj!= null && obj instanceof String){
                encodedRelay = (String) soapObject.getProperty("EncodedRelay");
            }
        }
        if (soapObject.hasProperty("Relay"))
        {
            Object obj = soapObject.getProperty("Relay");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Relay");
                relay = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                relay = (Boolean) soapObject.getProperty("Relay");
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return gPSTrackerEntryId;
            case 1:
                return operation.toString();
            case 2:
                return operationSpecified;
            case 3:
                return encodedMustUnderstand;
            case 4:
                return encodedMustUnderstand12;
            case 5:
                return mustUnderstand;
            case 6:
                return actor;
            case 7:
                return role;
            case 8:
                return didUnderstand;
            case 9:
                return encodedRelay;
            case 10:
                return relay;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 11;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GPSTrackerEntryId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Operation";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "OperationSpecified";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EncodedMustUnderstand";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EncodedMustUnderstand12";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MustUnderstand";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Actor";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Role";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "DidUnderstand";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EncodedRelay";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Relay";
                break;
        }
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
