package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.util.DateTimeHelper;
import com.quasardevelopment.bodyarchitect.client.wcf.ReferencesManager;
import com.quasardevelopment.bodyarchitect.client.wcf.WcfConstans;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.MessagePriority;
import org.joda.time.DateTime;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;
import java.util.UUID;

public class MessageDTO extends BAGlobalObject implements KvmSerializable ,Serializable,WcfInterfaces.IReferenceObject {
    
    public String content;
    public DateTime createdDate;
    public MessagePriority priority;
    public UserDTO receiver;
    public UserDTO sender;
    public String topic;

    
    public MessageDTO(){}
    
    public MessageDTO(SoapObject soapObject,ReferencesManager referencesTable) throws Exception
    {
        if (soapObject == null)
            return;
        if (soapObject.hasAttribute("Id"))
        {
            Object obj = soapObject.getAttribute("Id");
            referencesTable.Add((String) obj, this);
        }
        if (soapObject.hasProperty("Content"))
        {
            Object obj = soapObject.getProperty("Content");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Content");
                content = j.toString();
            }else if (obj!= null && obj instanceof String){
                content = (String) soapObject.getProperty("Content");
            }
        }
        if (soapObject.hasProperty("CreatedDate"))
        {
            Object obj = soapObject.getProperty("CreatedDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("CreatedDate");
                createdDate = DateTimeHelper.ConvertFromWebServiceNew(j.toString());
            }else if (obj!= null && obj instanceof String){
                createdDate = DateTimeHelper.ConvertFromWebServiceNew((String) soapObject.getProperty("CreatedDate"));
            }
        }
        if (soapObject.hasProperty("Priority"))
        {
            Object obj = soapObject.getProperty("Priority");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Priority");
                priority = MessagePriority.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("Receiver"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Receiver");
            receiver = (UserDTO)referencesTable.get(j,UserDTO.class);
            
        }
        if (soapObject.hasProperty("Sender"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Sender");
            sender = (UserDTO)referencesTable.get(j,UserDTO.class);
            
        }
        if (soapObject.hasProperty("Topic"))
        {
            Object obj = soapObject.getProperty("Topic");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Topic");
                topic = j.toString();
            }else if (obj!= null && obj instanceof String){
                topic = (String) soapObject.getProperty("Topic");
            }
        }
        if (soapObject.hasProperty("GlobalId"))
        {
            Object obj = soapObject.getProperty("GlobalId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("GlobalId");
                globalId =UUID.fromString(j.toString());
            }else if (obj!= null && obj instanceof String){
                globalId = UUID.fromString((String) soapObject.getProperty("GlobalId"));
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return globalId;
            case 1:
                return content;
            case 2:
                return createdDate;
            case 3:
                return priority.toString();
            case 4:
                return receiver;
            case 5:
                return sender;
            case 6:
                return topic;

        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 7;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GlobalId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Content";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDate";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Priority";
                break;
            case 4:
                info.type = UserDTO.class;
                info.name = "Receiver";
                break;
            case 5:
                info.type = UserDTO.class;
                info.name = "Sender";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Topic";
                break;

        }
        info.namespace= WcfConstans.ServiceNamespace;
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
}
