package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.ReferencesManager;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;

public class A6WEntryDTO extends EntryObjectDTO implements Serializable {
    
    public boolean completed;
    public A6WDay day;
    public Integer set1;
    public Integer set2;
    public Integer set3;
    
    public A6WEntryDTO(){}
    
    public A6WEntryDTO(SoapObject soapObject,ReferencesManager referencesTable)        throws Exception
    {
        super(soapObject,referencesTable);
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Completed"))
        {
            Object obj = soapObject.getProperty("Completed");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Completed");
                completed = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                completed = (Boolean) soapObject.getProperty("Completed");
            }
        }
        if (soapObject.hasProperty("Day"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Day");
            day =  new A6WDay (j);
            
        }
        if (soapObject.hasProperty("Set1"))
        {
            Object obj = soapObject.getProperty("Set1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Set1");
                set1 = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                set1 = (Integer) soapObject.getProperty("Set1");
            }
        }
        if (soapObject.hasProperty("Set2"))
        {
            Object obj = soapObject.getProperty("Set2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Set2");
                set2 = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                set2 = (Integer) soapObject.getProperty("Set2");
            }
        }
        if (soapObject.hasProperty("Set3"))
        {
            Object obj = soapObject.getProperty("Set3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Set3");
                set3 = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                set3 = (Integer) soapObject.getProperty("Set3");
            }
        }
    }
    @Override
    public Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.completed;
        }
        if(propertyIndex==count+1)
        {
            return this.day!=null?this.day:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.set1!=null?this.set1:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.set2!=null?this.set2:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.set3!=null?this.set3:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }
    
    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+ 5;
    }
    
    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "Completed";
            info.namespace= "http://MYBASERVICE.TK/IBodyArchitectAccessService/";
        }
        if(propertyIndex==count+1)
        {
            info.type = A6WDay.class;
            info.name = "Day";
            info.namespace= "http://MYBASERVICE.TK/IBodyArchitectAccessService/";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "Set1";
            info.namespace= "http://MYBASERVICE.TK/IBodyArchitectAccessService/";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "Set2";
            info.namespace= "http://MYBASERVICE.TK/IBodyArchitectAccessService/";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "Set3";
            info.namespace= "http://MYBASERVICE.TK/IBodyArchitectAccessService/";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
