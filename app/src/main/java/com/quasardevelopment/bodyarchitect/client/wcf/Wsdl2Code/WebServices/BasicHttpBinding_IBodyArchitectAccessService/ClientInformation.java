package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.WcfConstans;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.PlatformType;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;

public class ClientInformation implements KvmSerializable,Serializable {
    
    public String applicationLanguage;
    public String applicationVersion;
    public String clientInstanceId;
    public PlatformType platform;
    public String platformVersion;
    public String version;
    
    public ClientInformation(){}
    
    public ClientInformation(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ApplicationLanguage"))
        {
            Object obj = soapObject.getProperty("ApplicationLanguage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("ApplicationLanguage");
                applicationLanguage = j.toString();
            }else if (obj!= null && obj instanceof String){
                applicationLanguage = (String) soapObject.getProperty("ApplicationLanguage");
            }
        }
        if (soapObject.hasProperty("ApplicationVersion"))
        {
            Object obj = soapObject.getProperty("ApplicationVersion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("ApplicationVersion");
                applicationVersion = j.toString();
            }else if (obj!= null && obj instanceof String){
                applicationVersion = (String) soapObject.getProperty("ApplicationVersion");
            }
        }
        if (soapObject.hasProperty("ClientInstanceId"))
        {
            Object obj = soapObject.getProperty("ClientInstanceId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("ClientInstanceId");
                clientInstanceId = j.toString();
            }else if (obj!= null && obj instanceof String){
                clientInstanceId = (String) soapObject.getProperty("ClientInstanceId");
            }
        }
        if (soapObject.hasProperty("Platform"))
        {
            Object obj = soapObject.getProperty("Platform");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Platform");
                platform = PlatformType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("PlatformVersion"))
        {
            Object obj = soapObject.getProperty("PlatformVersion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("PlatformVersion");
                platformVersion = j.toString();
            }else if (obj!= null && obj instanceof String){
                platformVersion = (String) soapObject.getProperty("PlatformVersion");
            }
        }
        if (soapObject.hasProperty("Version"))
        {
            Object obj = soapObject.getProperty("Version");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Version");
                version = j.toString();
            }else if (obj!= null && obj instanceof String){
                version = (String) soapObject.getProperty("Version");
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return applicationLanguage;
            case 1:
                return applicationVersion;
            case 2:
                return clientInstanceId;
            case 3:
                return platform.toString();
            case 4:
                return platformVersion;
            case 5:
                return version;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 6;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ApplicationLanguage";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ApplicationVersion";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ClientInstanceId";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Platform";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PlatformVersion";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Version";
                break;
        }
        info.namespace= WcfConstans.ServiceNamespace;
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
