package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.WcfConstans;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.PictureCriteria;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.PrivacyCriteria;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.UserPlanCriteria;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.UsersSortOrder;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;
import java.util.UUID;

public class UserSearchCriteria implements KvmSerializable {
    
    public PrivacyCriteria accessCalendar=PrivacyCriteria.All;
    public PrivacyCriteria accessFriends=PrivacyCriteria.All;
    public PrivacyCriteria accessSizes=PrivacyCriteria.All;
    public VectorInt32 countries=new VectorInt32();
    public VectorGender genders=new VectorGender();
    public PictureCriteria picture=PictureCriteria.All;
    public UUID profileId;
    public boolean sortAscending;
    public UsersSortOrder sortOrder=UsersSortOrder.ByName;
    public UserPlanCriteria supplementsDefinition=UserPlanCriteria.All;
    public String userName;
    public VectorUserSearchGroup userSearchGroups=new VectorUserSearchGroup();
    public UserPlanCriteria workoutPlan=UserPlanCriteria.All;
    
    public UserSearchCriteria(){}
    
    public UserSearchCriteria(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("AccessCalendar"))
        {
            Object obj = soapObject.getProperty("AccessCalendar");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("AccessCalendar");
                accessCalendar = PrivacyCriteria.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("AccessFriends"))
        {
            Object obj = soapObject.getProperty("AccessFriends");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("AccessFriends");
                accessFriends = PrivacyCriteria.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("AccessSizes"))
        {
            Object obj = soapObject.getProperty("AccessSizes");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("AccessSizes");
                accessSizes = PrivacyCriteria.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("Countries"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Countries");
            countries = new VectorInt32(j);
        }
        if (soapObject.hasProperty("Genders"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Genders");
            genders = new VectorGender(j);
        }
        if (soapObject.hasProperty("Picture"))
        {
            Object obj = soapObject.getProperty("Picture");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Picture");
                picture = PictureCriteria.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("ProfileId"))
        {
            Object obj = soapObject.getProperty("ProfileId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("ProfileId");
                profileId = UUID.fromString(j.toString());
            }else if (obj!= null && obj instanceof String){
                profileId =UUID.fromString( (String) soapObject.getProperty("ProfileId"));
            }
        }
        if (soapObject.hasProperty("SortAscending"))
        {
            Object obj = soapObject.getProperty("SortAscending");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SortAscending");
                sortAscending = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                sortAscending = (Boolean) soapObject.getProperty("SortAscending");
            }
        }
        if (soapObject.hasProperty("SortOrder"))
        {
            Object obj = soapObject.getProperty("SortOrder");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SortOrder");
                sortOrder = UsersSortOrder.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("SupplementsDefinition"))
        {
            Object obj = soapObject.getProperty("SupplementsDefinition");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SupplementsDefinition");
                supplementsDefinition = UserPlanCriteria.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("UserName"))
        {
            Object obj = soapObject.getProperty("UserName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("UserName");
                userName = j.toString();
            }else if (obj!= null && obj instanceof String){
                userName = (String) soapObject.getProperty("UserName");
            }
        }
        if (soapObject.hasProperty("UserSearchGroups"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("UserSearchGroups");
            userSearchGroups = new VectorUserSearchGroup(j);
        }
        if (soapObject.hasProperty("WorkoutPlan"))
        {
            Object obj = soapObject.getProperty("WorkoutPlan");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("WorkoutPlan");
                workoutPlan = UserPlanCriteria.fromString(j.toString());
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return accessCalendar.toString();
            case 1:
                return accessFriends.toString();
            case 2:
                return accessSizes.toString();
            case 3:
                return countries;
            case 4:
                return genders;
            case 5:
                return picture.toString();
            case 6:
                return profileId;
            case 7:
                return sortAscending;
            case 8:
                return sortOrder.toString();
            case 9:
                return supplementsDefinition.toString();
            case 10:
                return userName;
            case 11:
                return userSearchGroups;
            case 12:
                return workoutPlan.toString();
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 13;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AccessCalendar";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AccessFriends";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AccessSizes";
                break;
            case 3:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "Countries";
                break;
            case 4:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "Genders";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Picture";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProfileId";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SortAscending";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SortOrder";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SupplementsDefinition";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UserName";
                break;
            case 11:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "UserSearchGroups";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "WorkoutPlan";
                break;
        }
        info.namespace= WcfConstans.ServiceNamespace;
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
