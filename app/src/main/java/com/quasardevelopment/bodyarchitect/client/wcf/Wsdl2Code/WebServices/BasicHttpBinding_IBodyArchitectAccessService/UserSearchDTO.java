package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.ReferencesManager;
import com.quasardevelopment.bodyarchitect.client.wcf.WcfConstans;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.text.ParseException;
import java.util.Hashtable;

public class UserSearchDTO extends UserDTO implements KvmSerializable,Serializable,WcfInterfaces.IReferenceObject {
    
    public boolean isOnline;
    public ProfileStatisticsDTO statistics;

    public UserSearchDTO(){}
    
    public UserSearchDTO(SoapObject soapObject,ReferencesManager referencesTable)    throws ParseException
    {
        super(soapObject,referencesTable);
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IsOnline"))
        {
            Object obj = soapObject.getProperty("IsOnline");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("IsOnline");
                isOnline = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isOnline = (Boolean) soapObject.getProperty("IsOnline");
            }
        }
        if (soapObject.hasProperty("Statistics"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Statistics");
            statistics =  new ProfileStatisticsDTO (j,referencesTable);

        }
    }
    @Override
    public Object getProperty(int arg0) {
        //todo:not used for now
        switch(arg0){
            case 0:
                return globalId;
            case 1:
                return isOnline;
            case 2:
                return statistics;
            case 3:
                return countryId;
            case 4:
                return creationDate;
            case 5:
                return gender.toString();
            case 6:
                return isDeleted;
            case 7:
                return picture;
            case 8:
                return privacy;
            case 9:
                return userName;
            case 10:
                return version;

        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 11;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GlobalId";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsOnline";
                break;
            case 2:
                info.type = ProfileStatisticsDTO.class;
                info.name = "Statistics";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CountryId";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreationDate";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Gender";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDeleted";
                break;
            case 7:
                info.type = PictureInfoDTO.class;
                info.name = "Picture";
                break;
            case 8:
                info.type = ProfilePrivacyDTO.class;
                info.name = "Privacy";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UserName";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Version";
                break;

        }
        info.namespace= WcfConstans.ServiceNamespace;
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
