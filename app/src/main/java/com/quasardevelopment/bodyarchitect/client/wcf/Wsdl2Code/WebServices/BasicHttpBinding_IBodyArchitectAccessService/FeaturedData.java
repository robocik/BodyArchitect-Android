package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.ReferencesManager;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;

import java.text.ParseException;
import java.util.Hashtable;

public class FeaturedData implements KvmSerializable {
    
    public VectorFeaturedEntryObjectDTO latestBlogs;
    public VectorFeaturedEntryObjectDTO latestStrengthTrainings;
    public VectorTrainingPlan latestTrainingPlans;
    public VectorSupplementCycleDefinitionDTO randomSupplementsDefinitions;
    public VectorTrainingPlan randomTrainingPlans;
    public VectorExerciseRecordsReportResultItem records;
    public VectorSupplementCycleDefinitionDTO supplementsDefinitions;
    
    public FeaturedData(){}
    
    public FeaturedData(SoapObject soapObject,ReferencesManager referencesTable)     throws ParseException
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("LatestBlogs"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("LatestBlogs");
            latestBlogs = new VectorFeaturedEntryObjectDTO(j,referencesTable);
        }
        if (soapObject.hasProperty("LatestStrengthTrainings"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("LatestStrengthTrainings");
            latestStrengthTrainings = new VectorFeaturedEntryObjectDTO(j,referencesTable);
        }
        if (soapObject.hasProperty("LatestTrainingPlans"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("LatestTrainingPlans");
            latestTrainingPlans = new VectorTrainingPlan(j,referencesTable);
        }
        if (soapObject.hasProperty("RandomSupplementsDefinitions"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("RandomSupplementsDefinitions");
            randomSupplementsDefinitions = new VectorSupplementCycleDefinitionDTO(j,referencesTable);
        }
        if (soapObject.hasProperty("RandomTrainingPlans"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("RandomTrainingPlans");
            randomTrainingPlans = new VectorTrainingPlan(j,referencesTable);
        }
        if (soapObject.hasProperty("Records"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Records");
            records = new VectorExerciseRecordsReportResultItem(j,referencesTable);
        }
        if (soapObject.hasProperty("SupplementsDefinitions"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SupplementsDefinitions");
            supplementsDefinitions = new VectorSupplementCycleDefinitionDTO(j,referencesTable);
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return latestBlogs;
            case 1:
                return latestStrengthTrainings;
            case 2:
                return latestTrainingPlans;
            case 3:
                return randomSupplementsDefinitions;
            case 4:
                return randomTrainingPlans;
            case 5:
                return records;
            case 6:
                return supplementsDefinitions;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 7;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "LatestBlogs";
                break;
            case 1:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "LatestStrengthTrainings";
                break;
            case 2:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "LatestTrainingPlans";
                break;
            case 3:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "RandomSupplementsDefinitions";
                break;
            case 4:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "RandomTrainingPlans";
                break;
            case 5:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "Records";
                break;
            case 6:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "SupplementsDefinitions";
                break;
        }
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
