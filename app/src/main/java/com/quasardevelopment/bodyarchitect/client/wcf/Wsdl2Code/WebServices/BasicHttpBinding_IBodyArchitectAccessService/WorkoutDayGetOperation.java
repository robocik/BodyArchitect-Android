package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.util.DateTimeHelper;
import com.quasardevelopment.bodyarchitect.client.wcf.WcfConstans;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.GetOperation;
import org.joda.time.DateTime;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;
import java.util.UUID;

public class WorkoutDayGetOperation implements KvmSerializable {
    
    public UUID customerId;
    public GetOperation operation;
    public UUID userId;
    public DateTime workoutDateTime;
    
    public WorkoutDayGetOperation(){}
    
    public WorkoutDayGetOperation(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("CustomerId"))
        {
            Object obj = soapObject.getProperty("CustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("CustomerId");
                customerId = UUID.fromString(j.toString());
            }else if (obj!= null && obj instanceof String){
                customerId = UUID.fromString((String) soapObject.getProperty("CustomerId"));
            }
        }
        if (soapObject.hasProperty("Operation"))
        {
            Object obj = soapObject.getProperty("Operation");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Operation");
                operation = GetOperation.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("UserId"))
        {
            Object obj = soapObject.getProperty("UserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("UserId");
                userId = UUID.fromString(j.toString());
            }else if (obj!= null && obj instanceof String){
                userId = UUID.fromString((String) soapObject.getProperty("UserId"));
            }
        }
        if (soapObject.hasProperty("WorkoutDateTime"))
        {
            Object obj = soapObject.getProperty("WorkoutDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("WorkoutDateTime");
                workoutDateTime = DateTimeHelper.ConvertFromWebServiceNew(j.toString());
            }else if (obj!= null && obj instanceof String){
                workoutDateTime =  DateTimeHelper.ConvertFromWebServiceNew((String) soapObject.getProperty("WorkoutDateTime"));
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return customerId;
            case 1:
                return operation.toString();
            case 2:
                return userId;
            case 3:
                return workoutDateTime;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 4;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustomerId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Operation";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UserId";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "WorkoutDateTime";
                break;
        }
        info.namespace= WcfConstans.ServiceNamespace;
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
