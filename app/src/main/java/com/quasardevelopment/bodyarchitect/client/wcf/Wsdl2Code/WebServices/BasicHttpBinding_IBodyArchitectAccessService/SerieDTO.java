package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.util.DateTimeHelper;
import com.quasardevelopment.bodyarchitect.client.wcf.ReferencesManager;
import com.quasardevelopment.bodyarchitect.client.wcf.WcfConstans;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.DropSetType;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.SetType;
import org.joda.time.DateTime;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.text.ParseException;
import java.util.Hashtable;
import java.util.UUID;

public class SerieDTO extends BAGlobalObject implements KvmSerializable,Serializable,WcfInterfaces.IReferenceObject {
    
    public Double calculatedValue;
    public String comment;
    public DropSetType dropSet=DropSetType.None;
    public DateTime endTime;
    public boolean isCiezarBezSztangi;
    public boolean isIncorrect;
    public boolean isRecord;
    public boolean isRestPause;
    public boolean isSuperSlow;
    public Double repetitionNumber;
    public SetType setType=SetType.Normalna;
    public DateTime startTime;
    public StrengthTrainingItemDTO strengthTrainingItem;
    public UUID trainingPlanItemId;
    public Double weight;
    
    public SerieDTO(){}
    
    public SerieDTO(SoapObject soapObject,ReferencesManager referencesTable) throws ParseException
    {
        if (soapObject == null)
            return;

        if (soapObject.hasAttribute("Id"))
        {
            Object obj = soapObject.getAttribute("Id");
            referencesTable.Add((String) obj, this);
        }
        if (soapObject.hasProperty("CalculatedValue"))
        {
            Object obj = soapObject.getProperty("CalculatedValue");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("CalculatedValue");
                calculatedValue = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                calculatedValue = (Double) soapObject.getProperty("CalculatedValue");
            }
        }
        if (soapObject.hasProperty("Comment"))
        {
            Object obj = soapObject.getProperty("Comment");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Comment");
                comment = j.toString();
            }else if (obj!= null && obj instanceof String){
                comment = (String) soapObject.getProperty("Comment");
            }
        }
        if (soapObject.hasProperty("DropSet"))
        {
            Object obj = soapObject.getProperty("DropSet");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("DropSet");
                dropSet = DropSetType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("EndTime"))
        {
            Object obj = soapObject.getProperty("EndTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("EndTime");
                endTime = DateTimeHelper.ConvertFromWebServiceNew(j.toString());
            }else if (obj!= null && obj instanceof String){
                endTime = DateTimeHelper.ConvertFromWebServiceNew((String) soapObject.getProperty("EndTime"));
            }
        }
        if (soapObject.hasProperty("IsCiezarBezSztangi"))
        {
            Object obj = soapObject.getProperty("IsCiezarBezSztangi");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("IsCiezarBezSztangi");
                isCiezarBezSztangi = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isCiezarBezSztangi = (Boolean) soapObject.getProperty("IsCiezarBezSztangi");
            }
        }
        if (soapObject.hasProperty("IsIncorrect"))
        {
            Object obj = soapObject.getProperty("IsIncorrect");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("IsIncorrect");
                isIncorrect = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isIncorrect = (Boolean) soapObject.getProperty("IsIncorrect");
            }
        }
        if (soapObject.hasProperty("IsRecord"))
        {
            Object obj = soapObject.getProperty("IsRecord");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("IsRecord");
                isRecord = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isRecord = (Boolean) soapObject.getProperty("IsRecord");
            }
        }
        if (soapObject.hasProperty("IsRestPause"))
        {
            Object obj = soapObject.getProperty("IsRestPause");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("IsRestPause");
                isRestPause = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isRestPause = (Boolean) soapObject.getProperty("IsRestPause");
            }
        }
        if (soapObject.hasProperty("IsSuperSlow"))
        {
            Object obj = soapObject.getProperty("IsSuperSlow");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("IsSuperSlow");
                isSuperSlow = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isSuperSlow = (Boolean) soapObject.getProperty("IsSuperSlow");
            }
        }
        if (soapObject.hasProperty("RepetitionNumber"))
        {
            Object obj = soapObject.getProperty("RepetitionNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("RepetitionNumber");
                repetitionNumber = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                repetitionNumber = (Double) soapObject.getProperty("RepetitionNumber");
            }
        }
        if (soapObject.hasProperty("SetType"))
        {
            Object obj = soapObject.getProperty("SetType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SetType");
                setType = SetType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("StartTime"))
        {
            Object obj = soapObject.getProperty("StartTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("StartTime");
                startTime = DateTimeHelper.ConvertFromWebServiceNew(j.toString());
            }else if (obj!= null && obj instanceof String){
                startTime = DateTimeHelper.ConvertFromWebServiceNew((String) soapObject.getProperty("StartTime"));
            }
        }
        if (soapObject.hasProperty("StrengthTrainingItem"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("StrengthTrainingItem");
            strengthTrainingItem=(StrengthTrainingItemDTO)referencesTable.get(j,StrengthTrainingItemDTO.class);
        }
        if (soapObject.hasProperty("TrainingPlanItemId"))
        {
            Object obj = soapObject.getProperty("TrainingPlanItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("TrainingPlanItemId");
                trainingPlanItemId = UUID.fromString(j.toString());
            }else if (obj!= null && obj instanceof String){
                trainingPlanItemId = UUID.fromString((String) soapObject.getProperty("TrainingPlanItemId"));
            }
        }
        if (soapObject.hasProperty("Weight"))
        {
            Object obj = soapObject.getProperty("Weight");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Weight");
                weight = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                weight = (Double) soapObject.getProperty("Weight");
            }
        }
        if (soapObject.hasProperty("GlobalId"))
        {
            Object obj = soapObject.getProperty("GlobalId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("GlobalId");
                globalId = UUID.fromString(j.toString());
            }else if (obj!= null && obj instanceof String){
                globalId = UUID.fromString((String) soapObject.getProperty("GlobalId"));
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return globalId;
            case 1:
                return comment;
            case 2:
                return dropSet.toString();
            case 3:
                return endTime;
            case 4:
                return isCiezarBezSztangi;
            case 5:
                return isIncorrect;
            case 6:
                return isRecord;
            case 7:
                return isRestPause;
            case 8:
                return isSuperSlow;
            case 9:
                return repetitionNumber;
            case 10:
                return setType.toString();
            case 11:
                return startTime;
            case 12:
                return strengthTrainingItem;
            case 13:
                return trainingPlanItemId;
            case 14:
                return weight;
            case 15:
                return calculatedValue;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 16;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GlobalId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Comment";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DropSet";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EndTime";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCiezarBezSztangi";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsIncorrect";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsRecord";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsRestPause";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsSuperSlow";
                break;
            case 9:
                info.type = Double.class;
                info.name = "RepetitionNumber";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SetType";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "StartTime";
                break;
            case 12:
                info.type = StrengthTrainingItemDTO.class;
                info.name = "StrengthTrainingItem";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TrainingPlanItemId";
                break;
            case 14:
                info.type = Double.class;
                info.name = "Weight";
                break;

            case 15:
                info.type = Double.class;
                info.name = "CalculatedValue";
                break;
        }
        info.namespace= WcfConstans.ServiceNamespace;
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }


}
