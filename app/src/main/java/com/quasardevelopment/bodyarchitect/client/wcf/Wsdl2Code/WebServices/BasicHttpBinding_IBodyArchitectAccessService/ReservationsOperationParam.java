package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.ReservationsOperationType;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class ReservationsOperationParam implements KvmSerializable {
    
    public String customerId;
    public String entryId;
    public ReservationsOperationType operationType;
    public boolean operationTypeSpecified;
    public String reservationId;
    
    public ReservationsOperationParam(){}
    
    public ReservationsOperationParam(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("CustomerId"))
        {
            Object obj = soapObject.getProperty("CustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("CustomerId");
                customerId = j.toString();
            }else if (obj!= null && obj instanceof String){
                customerId = (String) soapObject.getProperty("CustomerId");
            }
        }
        if (soapObject.hasProperty("EntryId"))
        {
            Object obj = soapObject.getProperty("EntryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("EntryId");
                entryId = j.toString();
            }else if (obj!= null && obj instanceof String){
                entryId = (String) soapObject.getProperty("EntryId");
            }
        }
        if (soapObject.hasProperty("OperationType"))
        {
            Object obj = soapObject.getProperty("OperationType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("OperationType");
                operationType = ReservationsOperationType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("OperationTypeSpecified"))
        {
            Object obj = soapObject.getProperty("OperationTypeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("OperationTypeSpecified");
                operationTypeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                operationTypeSpecified = (Boolean) soapObject.getProperty("OperationTypeSpecified");
            }
        }
        if (soapObject.hasProperty("ReservationId"))
        {
            Object obj = soapObject.getProperty("ReservationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("ReservationId");
                reservationId = j.toString();
            }else if (obj!= null && obj instanceof String){
                reservationId = (String) soapObject.getProperty("ReservationId");
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return customerId;
            case 1:
                return entryId;
            case 2:
                return operationType.toString();
            case 3:
                return operationTypeSpecified;
            case 4:
                return reservationId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 5;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustomerId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EntryId";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OperationType";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "OperationTypeSpecified";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ReservationId";
                break;
        }
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
