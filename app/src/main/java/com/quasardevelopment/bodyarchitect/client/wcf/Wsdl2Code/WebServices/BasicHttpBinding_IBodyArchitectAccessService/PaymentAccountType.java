package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.AccountType;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;

public class PaymentAccountType implements KvmSerializable,Serializable {
    
    public AccountType accountType;
    public boolean accountTypeSpecified;
    public int points;
    public boolean pointsSpecified;
    public int promotionPoints;
    public boolean promotionPointsSpecified;
    public String promotionStartDate;
    public boolean promotionStartDateSpecified;
    
    public PaymentAccountType(){}
    
    public PaymentAccountType(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("AccountType"))
        {
            Object obj = soapObject.getProperty("AccountType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("AccountType");
                accountType = AccountType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("AccountTypeSpecified"))
        {
            Object obj = soapObject.getProperty("AccountTypeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("AccountTypeSpecified");
                accountTypeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                accountTypeSpecified = (Boolean) soapObject.getProperty("AccountTypeSpecified");
            }
        }
        if (soapObject.hasProperty("Points"))
        {
            Object obj = soapObject.getProperty("Points");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Points");
                points = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                points = (Integer) soapObject.getProperty("Points");
            }
        }
        if (soapObject.hasProperty("PointsSpecified"))
        {
            Object obj = soapObject.getProperty("PointsSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("PointsSpecified");
                pointsSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pointsSpecified = (Boolean) soapObject.getProperty("PointsSpecified");
            }
        }
        if (soapObject.hasProperty("PromotionPoints"))
        {
            Object obj = soapObject.getProperty("PromotionPoints");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("PromotionPoints");
                promotionPoints = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                promotionPoints = (Integer) soapObject.getProperty("PromotionPoints");
            }
        }
        if (soapObject.hasProperty("PromotionPointsSpecified"))
        {
            Object obj = soapObject.getProperty("PromotionPointsSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("PromotionPointsSpecified");
                promotionPointsSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                promotionPointsSpecified = (Boolean) soapObject.getProperty("PromotionPointsSpecified");
            }
        }
        if (soapObject.hasProperty("PromotionStartDate"))
        {
            Object obj = soapObject.getProperty("PromotionStartDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("PromotionStartDate");
                promotionStartDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                promotionStartDate = (String) soapObject.getProperty("PromotionStartDate");
            }
        }
        if (soapObject.hasProperty("PromotionStartDateSpecified"))
        {
            Object obj = soapObject.getProperty("PromotionStartDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("PromotionStartDateSpecified");
                promotionStartDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                promotionStartDateSpecified = (Boolean) soapObject.getProperty("PromotionStartDateSpecified");
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return accountType.toString();
            case 1:
                return accountTypeSpecified;
            case 2:
                return points;
            case 3:
                return pointsSpecified;
            case 4:
                return promotionPoints;
            case 5:
                return promotionPointsSpecified;
            case 6:
                return promotionStartDate;
            case 7:
                return promotionStartDateSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 8;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AccountType";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AccountTypeSpecified";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Points";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PointsSpecified";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PromotionPoints";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PromotionPointsSpecified";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PromotionStartDate";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PromotionStartDateSpecified";
                break;
        }
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
