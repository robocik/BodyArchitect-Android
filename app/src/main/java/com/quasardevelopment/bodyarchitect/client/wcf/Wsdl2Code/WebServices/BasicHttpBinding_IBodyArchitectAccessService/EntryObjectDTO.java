package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.ReferencesManager;
import com.quasardevelopment.bodyarchitect.client.wcf.WcfConstans;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.EntryObjectStatus;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.ReportStatus;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;
import java.util.UUID;

public class EntryObjectDTO extends BAGlobalObject implements KvmSerializable,Serializable,WcfInterfaces.IReferenceObject {
    
    public String applicationName;
    public String comment;
    public MyTrainingLightDTO myTraining;
    public String name;
    public String remindBefore;
    public ReportStatus reportStatus=ReportStatus.ShowInReport;
    public UUID reservationId;
    public EntryObjectStatus status=EntryObjectStatus.Done;
    public TrainingDayInfoDTO trainingDay;
    public int version;



    
    public EntryObjectDTO()
    {

    }
    
    public EntryObjectDTO(SoapObject soapObject,ReferencesManager referencesTable) throws Exception
    {
        if (soapObject == null)
            return;

        if (soapObject.hasAttribute("Id"))
        {
            Object obj = soapObject.getAttribute("Id");
            referencesTable.Add((String) obj, this);
        }

        if (soapObject.hasProperty("ApplicationName"))
        {
            Object obj = soapObject.getProperty("ApplicationName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("ApplicationName");
                applicationName = j.toString();
            }else if (obj!= null && obj instanceof String){
                applicationName = (String) soapObject.getProperty("ApplicationName");
            }
        }
        if (soapObject.hasProperty("Comment"))
        {
            Object obj = soapObject.getProperty("Comment");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Comment");
                comment = j.toString();
            }else if (obj!= null && obj instanceof String){
                comment = (String) soapObject.getProperty("Comment");
            }
        }

        if (soapObject.hasProperty("MyTraining"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("MyTraining");
            myTraining = (MyTrainingLightDTO)referencesTable.get(j,MyTrainingLightDTO.class);
        }

        if (soapObject.hasProperty("Name"))
        {
            Object obj = soapObject.getProperty("Name");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Name");
                name = j.toString();
            }else if (obj!= null && obj instanceof String){
                name = (String) soapObject.getProperty("Name");
            }
        }
        if (soapObject.hasProperty("RemindBefore"))
        {
            //format of timespan is described here a little bit. Need to find code for parsing it in java
            //http://groups.yahoo.com/neo/groups/json/conversations/topics/1670
            //http://stackoverflow.com/questions/18850418/calculate-duration-of-two-points-in-time-iso-8601
            //http://stackoverflow.com/questions/16812593/how-to-convert-youtube-api-v3-duration-in-java
            //PeriodFormatter format = ISOPeriodFormat.standard();
            //Period start = format.parsePeriod("P1D");


            Object obj = soapObject.getProperty("RemindBefore");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("RemindBefore");
                remindBefore = j.toString();
            }else if (obj!= null && obj instanceof String){
                remindBefore = (String) soapObject.getProperty("RemindBefore");
            }
        }
        if (soapObject.hasProperty("ReportStatus"))
        {
            Object obj = soapObject.getProperty("ReportStatus");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("ReportStatus");
                reportStatus = ReportStatus.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("ReservationId"))
        {
            Object obj = soapObject.getProperty("ReservationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("ReservationId");
                reservationId = UUID.fromString(j.toString());
            }else if (obj!= null && obj instanceof String){
                reservationId = UUID.fromString((String) soapObject.getProperty("ReservationId"));
            }
        }
        if (soapObject.hasProperty("Status"))
        {
            Object obj = soapObject.getProperty("Status");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Status");
                status = EntryObjectStatus.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("TrainingDay"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("TrainingDay");
            trainingDay = (TrainingDayInfoDTO)referencesTable.get(j,TrainingDayInfoDTO.class);
        }
        if (soapObject.hasProperty("Version"))
        {
            Object obj = soapObject.getProperty("Version");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Version");
                version = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                version = (Integer) soapObject.getProperty("Version");
            }
        }
        if (soapObject.hasProperty("GlobalId"))
        {
            Object obj = soapObject.getProperty("GlobalId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("GlobalId");
                globalId = UUID.fromString(j.toString());
            }else if (obj!= null && obj instanceof String){
                globalId = UUID.fromString((String) soapObject.getProperty("GlobalId"));
            }
        }

    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return globalId;
            case 1:
                return comment;
            case 2:
                return myTraining;
            case 3:
                return name;
            case 4:
                return remindBefore;
            case 5:
                return reportStatus.toString();
            case 6:
                return reservationId;
            case 7:
                return status.toString();
            case 8:
                return trainingDay;
            case 9:
                return version;
            case 10:
                return applicationName;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 11;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GlobalId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Comment";
                break;
            case 2:
                info.type = MyTrainingLightDTO.class;
                info.name = "MyTraining";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Name";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RemindBefore";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ReportStatus";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ReservationId";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Status";
                break;
            case 8:
                info.type = TrainingDayInfoDTO.class;
                info.name = "TrainingDay";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Version";
                break;

            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ApplicationName";
                break;
        }
        info.namespace= WcfConstans.ServiceNamespace;
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }


}
