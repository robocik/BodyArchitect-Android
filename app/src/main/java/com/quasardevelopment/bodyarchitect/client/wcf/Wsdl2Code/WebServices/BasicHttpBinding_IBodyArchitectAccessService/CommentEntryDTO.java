package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.util.DateTimeHelper;
import com.quasardevelopment.bodyarchitect.client.wcf.ReferencesManager;
import org.joda.time.DateTime;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.text.ParseException;
import java.util.Hashtable;
import java.util.UUID;

public class CommentEntryDTO implements KvmSerializable,Serializable,WcfInterfaces.IReferenceObject {
    
    public String applicationName;
    public float rating;
    public String shortComment;
    public UserDTO user;
    public DateTime votedDate;
    public UUID globalId;
    
    public CommentEntryDTO(){}
    
    public CommentEntryDTO(SoapObject soapObject,ReferencesManager referencesTable)    throws ParseException
    {
        if (soapObject == null)
            return;
        if (soapObject.hasAttribute("Id"))
        {
            Object obj = soapObject.getAttribute("Id");
            referencesTable.Add((String) obj, this);
        }
        if (soapObject.hasProperty("ApplicationName"))
        {
            Object obj = soapObject.getProperty("ApplicationName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("ApplicationName");
                applicationName = j.toString();
            }else if (obj!= null && obj instanceof String){
                applicationName = (String) soapObject.getProperty("ApplicationName");
            }
        }
        if (soapObject.hasProperty("Rating"))
        {
            Object obj = soapObject.getProperty("Rating");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Rating");
                rating = Float.parseFloat(j.toString());
            }else if (obj!= null && obj instanceof Number){
                rating = (Integer) soapObject.getProperty("Rating");
            }
        }
        if (soapObject.hasProperty("ShortComment"))
        {
            Object obj = soapObject.getProperty("ShortComment");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("ShortComment");
                shortComment = j.toString();
            }else if (obj!= null && obj instanceof String){
                shortComment = (String) soapObject.getProperty("ShortComment");
            }
        }
        if (soapObject.hasProperty("User"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("User");
            user = (UserDTO)referencesTable.get(j,UserDTO.class);
        }
        if (soapObject.hasProperty("VotedDate"))
        {
            Object obj = soapObject.getProperty("VotedDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("VotedDate");
                votedDate = DateTimeHelper.ConvertFromWebServiceNew(j.toString());
            }else if (obj!= null && obj instanceof String){
                votedDate = DateTimeHelper.ConvertFromWebServiceNew((String) soapObject.getProperty("VotedDate"));
            }
        }
        if (soapObject.hasProperty("GlobalId"))
        {
            Object obj = soapObject.getProperty("GlobalId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("GlobalId");
                globalId = UUID.fromString(j.toString());
            }else if (obj!= null && obj instanceof String){
                globalId = UUID.fromString((String) soapObject.getProperty("GlobalId"));
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return applicationName;
            case 1:
                return rating;
            case 2:
                return shortComment;
            case 3:
                return user;
            case 4:
                return votedDate;
            case 5:
                return globalId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 6;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ApplicationName";
                break;
            case 1:
                info.type = Float.class;
                info.name = "Rating";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ShortComment";
                break;
            case 3:
                info.type = UserDTO.class;
                info.name = "User";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VotedDate";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GlobalId";
                break;
        }
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
