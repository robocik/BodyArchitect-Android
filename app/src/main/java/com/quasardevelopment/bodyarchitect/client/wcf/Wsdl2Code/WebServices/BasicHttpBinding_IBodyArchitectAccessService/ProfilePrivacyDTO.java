package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.quasardevelopment.bodyarchitect.client.wcf.WcfConstans;
import com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService.WS_Enums.Privacy;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.io.Serializable;
import java.util.Hashtable;

public class ProfilePrivacyDTO implements KvmSerializable,Serializable {
    
    public Privacy birthdayDate=Privacy.Public;
    public Privacy calendarView=Privacy.Public;
    public Privacy friends=Privacy.Public;
    public boolean searchable;
    public Privacy sizes=Privacy.Public;
    
    public ProfilePrivacyDTO(){}
    
    public ProfilePrivacyDTO(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("BirthdayDate"))
        {
            Object obj = soapObject.getProperty("BirthdayDate");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("BirthdayDate");
                birthdayDate = Privacy.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("CalendarView"))
        {
            Object obj = soapObject.getProperty("CalendarView");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("CalendarView");
                calendarView = Privacy.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("Friends"))
        {
            Object obj = soapObject.getProperty("Friends");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Friends");
                friends = Privacy.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("Searchable"))
        {
            Object obj = soapObject.getProperty("Searchable");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Searchable");
                searchable = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                searchable = (Boolean) soapObject.getProperty("Searchable");
            }
        }
        if (soapObject.hasProperty("Sizes"))
        {
            Object obj = soapObject.getProperty("Sizes");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("Sizes");
                sizes = Privacy.fromString(j.toString());
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return birthdayDate.toString();
            case 1:
                return calendarView.toString();
            case 2:
                return friends.toString();
            case 3:
                return searchable;
            case 4:
                return sizes.toString();
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 5;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "BirthdayDate";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CalendarView";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Friends";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Searchable";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Sizes";
                break;
        }
        info.namespace= WcfConstans.ServiceNamespace;
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
