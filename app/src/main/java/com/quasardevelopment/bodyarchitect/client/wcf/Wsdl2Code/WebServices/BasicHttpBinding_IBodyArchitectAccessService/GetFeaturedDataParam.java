package com.quasardevelopment.bodyarchitect.client.wcf.Wsdl2Code.WebServices.BasicHttpBinding_IBodyArchitectAccessService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.4
//
// Date Of Creation: 4/11/2013 5:22:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class GetFeaturedDataParam implements KvmSerializable {
    
    public int latestBlogsCount;
    public boolean latestBlogsCountSpecified;
    public int latestStrengthTrainingsCount;
    public boolean latestStrengthTrainingsCountSpecified;
    public int latestSupplementsDefinitionsCount;
    public boolean latestSupplementsDefinitionsCountSpecified;
    public int latestTrainingPlansCount;
    public boolean latestTrainingPlansCountSpecified;
    public int randomSupplementsDefinitionsCount;
    public boolean randomSupplementsDefinitionsCountSpecified;
    public int randomWorkoutPlansCount;
    public boolean randomWorkoutPlansCountSpecified;
    public boolean skipRecords;
    public boolean skipRecordsSpecified;
    
    public GetFeaturedDataParam(){}
    
    public GetFeaturedDataParam(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("LatestBlogsCount"))
        {
            Object obj = soapObject.getProperty("LatestBlogsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LatestBlogsCount");
                latestBlogsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                latestBlogsCount = (Integer) soapObject.getProperty("LatestBlogsCount");
            }
        }
        if (soapObject.hasProperty("LatestBlogsCountSpecified"))
        {
            Object obj = soapObject.getProperty("LatestBlogsCountSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LatestBlogsCountSpecified");
                latestBlogsCountSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                latestBlogsCountSpecified = (Boolean) soapObject.getProperty("LatestBlogsCountSpecified");
            }
        }
        if (soapObject.hasProperty("LatestStrengthTrainingsCount"))
        {
            Object obj = soapObject.getProperty("LatestStrengthTrainingsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LatestStrengthTrainingsCount");
                latestStrengthTrainingsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                latestStrengthTrainingsCount = (Integer) soapObject.getProperty("LatestStrengthTrainingsCount");
            }
        }
        if (soapObject.hasProperty("LatestStrengthTrainingsCountSpecified"))
        {
            Object obj = soapObject.getProperty("LatestStrengthTrainingsCountSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LatestStrengthTrainingsCountSpecified");
                latestStrengthTrainingsCountSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                latestStrengthTrainingsCountSpecified = (Boolean) soapObject.getProperty("LatestStrengthTrainingsCountSpecified");
            }
        }
        if (soapObject.hasProperty("LatestSupplementsDefinitionsCount"))
        {
            Object obj = soapObject.getProperty("LatestSupplementsDefinitionsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LatestSupplementsDefinitionsCount");
                latestSupplementsDefinitionsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                latestSupplementsDefinitionsCount = (Integer) soapObject.getProperty("LatestSupplementsDefinitionsCount");
            }
        }
        if (soapObject.hasProperty("LatestSupplementsDefinitionsCountSpecified"))
        {
            Object obj = soapObject.getProperty("LatestSupplementsDefinitionsCountSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LatestSupplementsDefinitionsCountSpecified");
                latestSupplementsDefinitionsCountSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                latestSupplementsDefinitionsCountSpecified = (Boolean) soapObject.getProperty("LatestSupplementsDefinitionsCountSpecified");
            }
        }
        if (soapObject.hasProperty("LatestTrainingPlansCount"))
        {
            Object obj = soapObject.getProperty("LatestTrainingPlansCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LatestTrainingPlansCount");
                latestTrainingPlansCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                latestTrainingPlansCount = (Integer) soapObject.getProperty("LatestTrainingPlansCount");
            }
        }
        if (soapObject.hasProperty("LatestTrainingPlansCountSpecified"))
        {
            Object obj = soapObject.getProperty("LatestTrainingPlansCountSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("LatestTrainingPlansCountSpecified");
                latestTrainingPlansCountSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                latestTrainingPlansCountSpecified = (Boolean) soapObject.getProperty("LatestTrainingPlansCountSpecified");
            }
        }
        if (soapObject.hasProperty("RandomSupplementsDefinitionsCount"))
        {
            Object obj = soapObject.getProperty("RandomSupplementsDefinitionsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("RandomSupplementsDefinitionsCount");
                randomSupplementsDefinitionsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                randomSupplementsDefinitionsCount = (Integer) soapObject.getProperty("RandomSupplementsDefinitionsCount");
            }
        }
        if (soapObject.hasProperty("RandomSupplementsDefinitionsCountSpecified"))
        {
            Object obj = soapObject.getProperty("RandomSupplementsDefinitionsCountSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("RandomSupplementsDefinitionsCountSpecified");
                randomSupplementsDefinitionsCountSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                randomSupplementsDefinitionsCountSpecified = (Boolean) soapObject.getProperty("RandomSupplementsDefinitionsCountSpecified");
            }
        }
        if (soapObject.hasProperty("RandomWorkoutPlansCount"))
        {
            Object obj = soapObject.getProperty("RandomWorkoutPlansCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("RandomWorkoutPlansCount");
                randomWorkoutPlansCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                randomWorkoutPlansCount = (Integer) soapObject.getProperty("RandomWorkoutPlansCount");
            }
        }
        if (soapObject.hasProperty("RandomWorkoutPlansCountSpecified"))
        {
            Object obj = soapObject.getProperty("RandomWorkoutPlansCountSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("RandomWorkoutPlansCountSpecified");
                randomWorkoutPlansCountSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                randomWorkoutPlansCountSpecified = (Boolean) soapObject.getProperty("RandomWorkoutPlansCountSpecified");
            }
        }
        if (soapObject.hasProperty("SkipRecords"))
        {
            Object obj = soapObject.getProperty("SkipRecords");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SkipRecords");
                skipRecords = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                skipRecords = (Boolean) soapObject.getProperty("SkipRecords");
            }
        }
        if (soapObject.hasProperty("SkipRecordsSpecified"))
        {
            Object obj = soapObject.getProperty("SkipRecordsSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) soapObject.getProperty("SkipRecordsSpecified");
                skipRecordsSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                skipRecordsSpecified = (Boolean) soapObject.getProperty("SkipRecordsSpecified");
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return latestBlogsCount;
            case 1:
                return latestBlogsCountSpecified;
            case 2:
                return latestStrengthTrainingsCount;
            case 3:
                return latestStrengthTrainingsCountSpecified;
            case 4:
                return latestSupplementsDefinitionsCount;
            case 5:
                return latestSupplementsDefinitionsCountSpecified;
            case 6:
                return latestTrainingPlansCount;
            case 7:
                return latestTrainingPlansCountSpecified;
            case 8:
                return randomSupplementsDefinitionsCount;
            case 9:
                return randomSupplementsDefinitionsCountSpecified;
            case 10:
                return randomWorkoutPlansCount;
            case 11:
                return randomWorkoutPlansCountSpecified;
            case 12:
                return skipRecords;
            case 13:
                return skipRecordsSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 14;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LatestBlogsCount";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "LatestBlogsCountSpecified";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LatestStrengthTrainingsCount";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "LatestStrengthTrainingsCountSpecified";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LatestSupplementsDefinitionsCount";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "LatestSupplementsDefinitionsCountSpecified";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LatestTrainingPlansCount";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "LatestTrainingPlansCountSpecified";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "RandomSupplementsDefinitionsCount";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "RandomSupplementsDefinitionsCountSpecified";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "RandomWorkoutPlansCount";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "RandomWorkoutPlansCountSpecified";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SkipRecords";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SkipRecordsSpecified";
                break;
        }
    }

    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
